name: Go

on:
  push:
    branches: [ "master" ]
    tags: 
      - 'v*.*.*'           

  pull_request:
    branches: [ "master" ]
    tags: 
      - 'v*.*.*'           

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    if: startsWith(github.ref, 'refs/tags/v') 
    runs-on: ubuntu-latest
    needs: build 
    permissions:
      contents: write 

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'

    - name: Build Release Binary for Linux
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o tasker-linux-amd64 ./cmd/main.go 
      env:
        GO111MODULE: on 

    - name: Build Release Binary for macOS
      run: |
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o tasker-darwin-amd64 ./cmd/main.go 
      env:
        GO111MODULE: on

    - name: Build Release Binary for Windows
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o tasker-windows-amd64.exe ./cmd/main.go 
      env:
        GO111MODULE: on

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref }} 
        release_name: Release ${{ github.ref }}
        body: |
          Automated release created from tag ${{ github.ref }}
          See [changelog](LINK_TO_YOUR_CHANGELOG) for details. 
        draft: false 
        prerelease: false 

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./tasker-linux-amd64 
        asset_name: tasker-linux-amd64 
        asset_content_type: application/octet-stream 

    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasker-darwin-amd64
        asset_name: tasker-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasker-windows-amd64.exe
        asset_name: tasker-windows-amd64.exe
        asset_content_type: application/octet-stream
