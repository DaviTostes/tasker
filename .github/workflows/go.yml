name: Go

on:
  pull_request:
    branches: [ "master" ]
    tags: 
      - 'v*.*.*'           

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    if: startsWith(github.ref, 'refs/tags/v') # Only run this job if a tag starting with 'v' was pushed
    runs-on: ubuntu-latest
    needs: build # This job depends on 'build' succeeding
    permissions:
      contents: write # Grant write permissions to the GITHUB_TOKEN for creating releases

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'

    - name: Build Release Binary for Linux
      run: |
        # Adjust 'tasker' to the name of your main executable package or file
        # If your main function is in cmd/main.go, it might be 'go build -o tasker ./cmd/main.go'
        # Or if your main package is named 'tasker' and it's at the root: 'go build -o tasker .'
        # Use a cross-platform build for better distribution, e.g., linux-amd64
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o tasker-linux-amd64 ./cmd/main.go # Adjust path to your main.go
      env:
        GO111MODULE: on # Ensure module mode is on

    - name: Build Release Binary for macOS
      run: |
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o tasker-darwin-amd64 ./cmd/main.go # Adjust path to your main.go
      env:
        GO111MODULE: on

    - name: Build Release Binary for Windows
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o tasker-windows-amd64.exe ./cmd/main.go # Adjust path to your main.go
      env:
        GO111MODULE: on

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1 # or v1.1.4 for older versions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is automatically provided by GitHub Actions
      with:
        tag_name: ${{ github.ref }} # The tag that triggered the workflow (e.g., refs/tags/v1.0.0)
        release_name: Release ${{ github.ref }}
        body: |
          Automated release created from tag ${{ github.ref }}
          See [changelog](LINK_TO_YOUR_CHANGELOG) for details. # Optional: link to your changelog
        draft: false # Set to true to create a draft release (not published immediately)
        prerelease: false # Set to true for pre-release versions

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1 # or v1.0.1 for older versions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # URL from the create_release step
        asset_path: ./tasker-linux-amd64 # Path to your built binary
        asset_name: tasker-linux-amd64 # Name of the asset in the release
        asset_content_type: application/octet-stream # Standard content type for binaries

    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasker-darwin-amd64
        asset_name: tasker-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasker-windows-amd64.exe
        asset_name: tasker-windows-amd64.exe
        asset_content_type: application/octet-stream
